name: Build and publish docker images
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      # - name: Extract version
      #   id: get_version
      #   run: echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: |
            ghcr.io/stv-io/rss2email-docker
          tags: |
            type=sha
            type=raw,value=${{ github.event.pull_request.head.sha }}
            # type=raw,value=v${{ steps.get_version.outputs.version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: |
          #   DIAGRAMS_VERSION=${{ steps.get_version.outputs.version }}

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/stv-io/docker-diagrams:${{ github.event.pull_request.head.sha }}
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4.2.2
  #     - name: generate diagrams
  #       run: |
  #         python3 example.py
  #         file flow.png
  #         ls -ltrh flow.png
